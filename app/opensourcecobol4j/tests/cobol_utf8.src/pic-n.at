AT_SETUP([PIC N Value clause])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7) VALUE "日本語の文字列".
       PROCEDURE        DIVISION.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '日本語の文字列' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N Move])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '日本語の文字列' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N Move with trunc])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(3).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '日本語' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N Move with padding by full-width SPC])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(9).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '日本語の文字列　　' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N Move with justify])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(9) JUSTIFIED RIGHT.
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '　　日本語の文字列' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N EDITED w/ VALUE])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC NN/NNBNN0 VALUE '日本／中国　文字０'.
       PROCEDURE        DIVISION.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '日本／中国　文字０' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([INITIALIZE PIC N EDITED])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC NN/NNBNN0 VALUE '日本／中国　文字０'.
       PROCEDURE        DIVISION.
           MOVE "春夏秋冬寒暖" TO F0.
           INITIALIZE F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '　　／　　　　　０' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([INITIALIZE PIC N EDITED TO VALUE])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC NN/NNBNN0 VALUE '日本／中国　文字０'.
       PROCEDURE        DIVISION.
           MOVE "春夏秋冬寒暖" TO F0.
           INITIALIZE F0 NATIONAL TO VALUE.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '日本／中国　文字０' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N Move to NATIONAL EDITED])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC NN/NNBNN0.
       PROCEDURE        DIVISION.
           MOVE "日本中国文字" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '日本／中国　文字０' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N Move with half-width alnum conv.])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "ABC0123" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n 'ＡＢＣ０１２３' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N Move with half-width kana conv.])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "ｺﾒﾀﾞｺｰﾋｰ" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob], [0])
AT_CHECK([java prog | od -tx1 -An | sed -e 's/  */ /g' -e 's/ *$//'], [0], [ 83 52 83 81 83 5f 83 52 81 5b 83 71 81 5b
])

AT_CLEANUP

AT_SETUP([PIC N Ref mod(n:)])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0(5:) WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '文字列' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N Ref mod(n:m)])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "日本語の文字列" TO F0.
           DISPLAY F0(5:2) WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '文字' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N STRING by size])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(2)  VALUE "私の".
       01 F1 PIC N(3)  VALUE "名前は".
       01 F2 PIC N(5) VALUE "ありません".
       01 FF PIC N(10).
       PROCEDURE        DIVISION.
           STRING F0 F1 F2 DELIMITED BY SIZE
             INTO FF.
           DISPLAY FF WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '私の名前はありません' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N STRING with delimiter (causes warn)])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(2)  VALUE "私の".
       01 F1 PIC N(4)  VALUE "名前△は".
       01 F2 PIC N(6) VALUE "△ありません".
       01 FF PIC N(4).
       PROCEDURE        DIVISION.
           STRING F0 F1 F2 DELIMITED BY "△"
             INTO FF.
           DISPLAY FF WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '私の名前' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N STRING with NATIONAL delimiter])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(2)  VALUE "私の".
       01 F1 PIC N(4)  VALUE "名前△は".
       01 F2 PIC N(6) VALUE "△ありません".
       01 FF PIC N(4).
       PROCEDURE        DIVISION.
           STRING F0 F1 F2 DELIMITED BY N"△"
             INTO FF.
           DISPLAY FF WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '私の名前' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N STRING with pointer])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(2)  VALUE "私の".
       01 F1 PIC N(3)  VALUE "名前は".
       01 F2 PIC N(5)  VALUE "ありません".
       01 FF PIC N(10) VALUE "言えません○※△■×".
       01 FP PIC 99    VALUE 6.
       PROCEDURE        DIVISION.
           STRING F0 F1 F2 DELIMITED BY SIZE
             INTO FF WITH POINTER FP.
           DISPLAY FF WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '言えません私の名前は' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N INSPECT REPLACING])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(10)  VALUE "１２３４５１２３４５".
       PROCEDURE        DIVISION.
           INSPECT F0 REPLACING ALL "５" BY "０".
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '１２３４０１２３４０' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N INSPECT REPLACING by ZERO])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(10)  VALUE "１２３４５１２３４５".
       PROCEDURE        DIVISION.
           INSPECT F0 REPLACING ALL "５" BY ZERO.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '１２３４０１２３４０' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N INSPECT REPLACING by NATIONAL ZERO])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(10)  VALUE "１２３４５１２３４５".
       PROCEDURE        DIVISION.
           INSPECT F0 REPLACING ALL N"５" BY ZERO.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '１２３４０１２３４０' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N INSPECT TALLYING])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(10)  VALUE "１２３４５１２３４５".
       01 CN PIC 99.
       PROCEDURE        DIVISION.
           INSPECT F0 TALLYING CN FOR ALL "４５".
           DISPLAY CN WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '02' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N Move with half-width dakuten kana.])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "ﾞﾀﾞ･ｳﾞｨﾝﾁ" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '゛ダ・ヴィンチ' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N Move with half-width han-dakuten kana.])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 F0 PIC N(7).
       PROCEDURE        DIVISION.
           MOVE "ﾟﾎﾟﾝﾃﾞﾘﾝｸﾞ" TO F0.
           DISPLAY F0 WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '゜ポンデリング' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP

AT_SETUP([PIC N WRITE FROM Japanese literal])
export LC_ALL=''

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
           SELECT TEST-FILE ASSIGN TO "TESTFILE"
                  ORGANIZATION IS SEQUENTIAL.
       DATA DIVISION.
       FILE SECTION.
       FD  TEST-FILE.
       01  TEST-DATA     PIC N(18).
       WORKING-STORAGE SECTION.
       PROCEDURE DIVISION.
           OPEN  OUTPUT TEST-FILE.
           WRITE TEST-DATA FROM "縄文弥生古墳飛鳥奈良平安鎌倉室町江戸".
           CLOSE TEST-FILE.

           OPEN INPUT TEST-FILE.
           READ TEST-FILE
               NOT AT END
                   DISPLAY TEST-DATA
           END-READ.
           CLOSE TEST-FILE.
])

AT_CHECK([cobj prog.cob])
AT_CHECK([java prog > out1.txt])
AT_CHECK([echo -n '縄文弥生古墳飛鳥奈良平安鎌倉室町江戸
' | nkf --ic=UTF-8 --oc=Shift_JIS > out2.txt])
AT_CHECK([diff out1.txt out2.txt])

AT_CLEANUP
