name: Other tests

on:
  workflow_call:
    inputs:
      test-name:
        required: true
        type: string
      os:
        required: true
        type: string
      configure-args:
        required: false
        type: string
        default: ""

permissions:
  contents: read

env:
  CLASSPATH: ":/usr/lib/opensourcecobol4j/libcobj.jar"

jobs:
  test-other:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.os }}
    steps:
      - name: Get the artifact name
        run: echo "ARTIFACT_NAME=${{ inputs.os }}" | sed 's/:/-/g' >> "$GITHUB_ENV"

      - uses: actions/download-artifact@v4
        with:
          name: opensourcecobol4j-${{ env.ARTIFACT_NAME }}-opt_${{ inputs.configure-args }}

      - uses: actions/setup-java@v4
        if: inputs.os != 'amazonlinux:2023'
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install dependencies on Ubuntu 24.04
        if: inputs.os == 'ubuntu:24.04'
        run: |
          apt-get update -y
          apt-get install -y build-essential unzip nkf

      - name: Install dependencies on AlmaLinux 9
        if: inputs.os == 'almalinux:9'
        run: |
          dnf -y update
          dnf install -y gcc make diffutils glibc-gconv-extra unzip wget
          wget "https://github.com/nurse/nkf/archive/refs/tags/v2_1_3.tar.gz" -O nkf-2.1.3.tar.gz
          tar zxf nkf-2.1.3.tar.gz
          cd nkf-2_1_3
          make
          make install

      - name: Install dependencies on Amazon Linux 2023
        if: inputs.os == 'amazonlinux:2023'
        run: |
          dnf -y update
          dnf install -y gcc make diffutils tar gzip unzip wget nkf

      - name: Install Java
        if: inputs.os == 'amazonlinux:2023'
        run: |
          dnf install -y java-11-amazon-corretto-devel

      - name: Install opensource COBOL 4J
        run: |
          tar zxf opensourcecobol4j.tar.gz
          mv opensourcecobol4j/* .
          make install
      
      - name: Run tests ${{ inputs.test-name }}
        working-directory: tests/
        run:
          ./${{ inputs.test-name }}
      
      - name: Upload log files if tests fail
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.test-name }}-${{ env.ARTIFACT_NAME }}-log
          path: tests/${{ inputs.test-name }}.dir/
